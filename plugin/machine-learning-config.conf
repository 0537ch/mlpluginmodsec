# ------------------------------------------------------------------------
# OWASP ModSecurity Core Rule Set Plugin
# Copyright (c) 2021-2022 Core Rule Set project. All rights reserved.
#
# The OWASP ModSecurity Core Rule Set plugins are distributed under
# Apache Software License (ASL) version 2
# Please see the enclosed LICENSE file for full details.
# ------------------------------------------------------------------------

# OWASP CRS Plugin
# Plugin name: machine-learning
# Plugin description: Memory-safe ML integration for SQL Injection detection
# Rule ID block base: 9,600,000 - 9,600,999
# Plugin version: 1.0.0

# Enable ModSecurity Status Engine
SecStatusEngine On

# Initialize collections
SecAction \
  "id:9600001,\
   phase:1,\
   nolog,\
   pass,\
   initcol:ip=%{REMOTE_ADDR},\
   setvar:ip.ml_requests=0"

SecRule TX:DETECTION_PARANOIA_LEVEL "@lt 1" "id:9600010,phase:1,pass,nolog,skipAfter:END-ML-PLUGIN"

# Enable ModSecurity debug log for development
SecDebugLog /var/log/modsec_debug.log
SecDebugLogLevel 5

# Set resource limits to prevent memory issues
SecRequestBodyLimit 262144
SecRequestBodyInMemoryLimit 131072
SecRequestBodyNoFilesLimit 131072
SecResponseBodyLimit 262144

# Enable plugin with memory-safe defaults and timeout
SecAction \
  "id:9600020,\
   phase:1,\
   pass,\
   nolog,\
   setvar:tx.machine-learning-plugin_enabled=1,\
   setvar:tx.machine-learning-plugin_max_args=25,\
   setvar:tx.machine-learning-plugin_max_arg_length=2048,\
   setvar:tx.request_timeout=2"

# Initialize ML score variables
SecAction \
  "id:9600030,\
   phase:1,\
   pass,\
   nolog,\
   setvar:tx.ml_score=0,\
   setvar:tx.sql_injection_score=0,\
   setvar:tx.ml_threshold=-0.5"

# Rate limiting for ML requests using IP collection
SecRule IP:ML_REQUESTS "@eq 0" \
  "id:9600040,\
   phase:1,\
   pass,\
   nolog,\
   setvar:ip.ml_requests=1,\
   expirevar:ip.ml_requests=60"

SecRule IP:ML_REQUESTS "@eq 1" \
  "id:9600041,\
   phase:1,\
   pass,\
   nolog,\
   setvar:ip.ml_requests=+1"

SecRule IP:ML_REQUESTS "@gt 100" \
  "id:9600050,\
   phase:1,\
   deny,\
   status:429,\
   log,\
   msg:'ML request rate limit exceeded'"

# Split pattern matching into smaller chunks
SecRule REQUEST_URI|ARGS|REQUEST_HEADERS|!REQUEST_HEADERS:Referer "@rx (?i:\\s+or\\s+)" \
    "id:9600060,\
    phase:2,\
    deny,\
    status:403,\
    log,\
    msg:'SQL Injection Pattern (OR) Detected'"

SecRule REQUEST_URI|ARGS|REQUEST_HEADERS|!REQUEST_HEADERS:Referer "@rx (?i:\\bunion\\b)" \
    "id:9600070,\
    phase:2,\
    deny,\
    status:403,\
    log,\
    msg:'SQL Injection Pattern (UNION) Detected'"

SecRule REQUEST_URI|ARGS|REQUEST_HEADERS|!REQUEST_HEADERS:Referer "@rx (?i:\\s*drop\\s+)" \
    "id:9600080,\
    phase:2,\
    deny,\
    status:403,\
    log,\
    msg:'SQL Injection Pattern (DROP) Detected'"

SecRule &TX:sql_injection_score \
    "@eq 0" \
    "id:9600090,\
    phase:2,\
    pass,\
    log"

SecRuleScript "/etc/apache2/modsecurity/plugin/machine-learning-client.lua" \
    "id:9600100,\
    phase:2,\
    pass,\
    log"

SecRule TX:ml_score "@gt %{tx.ml_threshold}" \
    "id:9600200,\
    phase:2,\
    deny,\
    status:403,\
    log,\
    msg:'ML Model Detected SQL Injection'"

SecRule TX:machine-learning-plugin_enabled "@eq 1" \
    "id:9600210,\
    phase:2,\
    pass,\
    nolog"

SecRule &TX:ml_score "@gt 0" \
    "id:9600220,\
    phase:2,\
    deny,\
    status:403,\
    log,\
    msg:'ML Score Exceeded Threshold',\
    logdata:'Score: %{TX.ml_score}'"

# Memory cleanup at end of phase 5
SecAction \
  "id:9600500,\
   phase:5,\
   pass,\
   nolog,\
   setvar:tx.machine-learning-plugin_enabled=0,\
   setvar:tx.ml_score=0,\
   setvar:tx.sql_injection_score=0"

SecMarker "END-ML-PLUGIN"
